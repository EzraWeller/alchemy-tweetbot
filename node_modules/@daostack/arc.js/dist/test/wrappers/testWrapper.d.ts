import { Hash, SchemePermissions } from "../../commonTypes";
import { ContractWrapperBase } from "../../contractWrapperBase";
import { ContractWrapperFactory } from "../../contractWrapperFactory";
import { ArcTransactionDataResult, IContractWrapperFactory } from "../../iContractWrapperBase";
import { TxGeneratingFunctionOptions } from "../../transactionService";
import { AbsoluteVoteParams } from "../../wrappers/absoluteVote";
export declare class TestWrapperWrapper extends ContractWrapperBase {
    name: string;
    friendlyName: string;
    factory: IContractWrapperFactory<TestWrapperWrapper>;
    foo(): string;
    aMethod(): string;
    setParameters(params: AbsoluteVoteParams & TxGeneratingFunctionOptions): Promise<ArcTransactionDataResult<Hash>>;
    getDefaultPermissions(): SchemePermissions;
}
export declare const TestWrapperFactory: ContractWrapperFactory<TestWrapperWrapper>;
